# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .geometry_collection import GeometryCollection
import typing
from .feature import Feature
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class FeatureCollection(UniversalBaseModel):
    """
    FeatureCollection Model
    """

    bbox: typing.Optional[typing.List[typing.Optional[typing.Any]]] = None
    type: typing.Literal["FeatureCollection"] = "FeatureCollection"
    features: typing.List[Feature]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
